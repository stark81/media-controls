{
  "root": true,
  "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended", "plugin:import/recommended", "plugin:import/typescript"],
  "plugins": ["@typescript-eslint"],
  "parser": "@typescript-eslint/parser",
  "env": {
    "es2021": true
  },
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module"
  },
  "globals": {
    "ARGV": "readonly",
    "Debugger": "readonly",
    "GIRepositoryGType": "readonly",
    "globalThis": "readonly",
    "imports": "readonly",
    "Intl": "readonly",
    "log": "readonly",
    "logError": "readonly",
    "pkg": "readonly",
    "print": "readonly",
    "printerr": "readonly",
    "window": "readonly",
    "TextEncoder": "readonly",
    "TextDecoder": "readonly",
    "console": "readonly",
    "setTimeout": "readonly",
    "setInterval": "readonly",
    "clearTimeout": "readonly",
    "clearInterval": "readonly"
  },
  "rules": {
    "import/extensions": ["error", "ignorePackages"],
    "import/no-unresolved": "off",
    "max-len": [
      "warn",
      {
        "code": 140,
        "ignoreComments": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": true,
        "variables": true,
        "allowNamedExports": true
      }
    ],
    "no-restricted-globals": [
      "error",
      {
        "name": "Debugger",
        "message": "Internal use only"
      },
      {
        "name": "GIRepositoryGType",
        "message": "Internal use only"
      },
      {
        "name": "log",
        "message": "Use debugLog()"
      },
      {
        "name": "logError",
        "message": "Use errorLog()"
      }
    ],
    "no-restricted-properties": [
      "error",
      {
        "object": "imports",
        "property": "format",
        "message": "Use template strings"
      },
      {
        "object": "pkg",
        "property": "initFormat",
        "message": "Use template strings"
      },
      {
        "object": "Lang",
        "property": "copyProperties",
        "message": "Use Object.assign()"
      },
      {
        "object": "Lang",
        "property": "bind",
        "message": "Use arrow notation or Function.prototype.bind()"
      },
      {
        "object": "Lang",
        "property": "Class",
        "message": "Use ES6 classes"
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "MethodDefinition[key.name=\"_init\"] CallExpression[arguments.length<=1][callee.object.type=\"Super\"][callee.property.name=\"_init\"]",
        "message": "Use constructor() and super()"
      }
    ],
    "no-constant-condition": [
      "warn",
      {
        "checkLoops": false
      }
    ],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "block-like" },
      { "blankLine": "always", "prev": "block-like", "next": "*" },
      { "blankLine": "always", "prev": "multiline-expression", "next": "*" },
      { "blankLine": "always", "prev": "*", "next": "multiline-expression" },
      { "blankLine": "always", "prev": "import", "next": "expression" },
      { "blankLine": "always", "prev": "expression", "next": "export" },
      { "blankLine": "always", "prev": "expression", "next": "class" },
      { "blankLine": "always", "prev": "*", "next": "function" }
    ],
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }]
  }
}
